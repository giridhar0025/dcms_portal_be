openapi: 3.0.0
info:
  title: DCMS Portal API
  version: 1.0.0
paths:
  /api/auth/signup:
    post:
      summary: User signup
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
  /api/auth/login:
    post:
      summary: User login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
  /api/auth/logout:
    post:
      summary: Logout user
      tags:
        - Auth
      responses:
        '200':
          description: Logged out
  /api/auth/refresh:
    post:
      summary: Refresh token
      tags:
        - Auth
      responses:
        '200':
          description: New access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
  /api/auth/me:
    get:
      summary: Current user
      tags:
        - Auth
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  roles:
                    type: array
                    items:
                      type: string

  /api/patients:
    post:
      summary: Create patient
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - phone
                - gender
                - dateOfBirth
                - address
                - medicalHistory
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                gender:
                  type: string
                dateOfBirth:
                  type: string
                address:
                  type: string
                medicalHistory:
                  type: string
      responses:
        '201':
          description: Created patient
  /api/patients/{id}:
    put:
      summary: Edit patient
      tags:
        - Patients
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated patient
    delete:
      summary: Delete patient
      tags:
        - Patients
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Patient deleted

  /api/appointments:
    post:
      summary: Book appointment
      tags:
        - Appointments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - patientId
                - doctorId
                - startTime
                - endTime
              properties:
                patientId:
                  type: string
                doctorId:
                  type: string
                startTime:
                  type: string
                endTime:
                  type: string
                notes:
                  type: string
      responses:
        '201':
          description: Appointment booked
    get:
      summary: List appointments
      tags:
        - Appointments
      parameters:
        - in: query
          name: doctorId
          schema:
            type: string
        - in: query
          name: patientId
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
        - in: query
          name: endDate
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
      responses:
        '200':
          description: A list of appointments
  /api/appointments/{id}:
    get:
      summary: Get appointment details
      tags:
        - Appointments
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Appointment info
    put:
      summary: Reschedule appointment
      tags:
        - Appointments
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - startTime
                - endTime
              properties:
                startTime:
                  type: string
                endTime:
                  type: string
      responses:
        '200':
          description: Updated appointment
    delete:
      summary: Cancel appointment
      tags:
        - Appointments
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Appointment cancelled

  /api/protected/admin:
    get:
      summary: Admin protected route
      tags:
        - Protected
      responses:
        '200':
          description: Admin access message
